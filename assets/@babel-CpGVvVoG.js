function a(r){"@babel/helpers - typeof";return a=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(r)}function s(){return s=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r},s.apply(null,arguments)}function y(r,t,e,n,c,f,i){try{var u=r[f](i),o=u.value}catch(l){return void e(l)}u.done?t(o):Promise.resolve(o).then(n,c)}function p(r){return function(){var t=this,e=arguments;return new Promise(function(n,c){var f=r.apply(t,e);function i(o){y(f,n,c,i,u,"next",o)}function u(o){y(f,n,c,i,u,"throw",o)}i(void 0)})}}function b(r,t){if(a(r)!="object"||!r)return r;var e=r[Symbol.toPrimitive];if(e!==void 0){var n=e.call(r,t);if(a(n)!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(r)}function m(r){var t=b(r,"string");return a(t)=="symbol"?t:t+""}function v(r,t,e){return(t=m(t))in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r}export{s as _,p as a,v as b,a as c};
